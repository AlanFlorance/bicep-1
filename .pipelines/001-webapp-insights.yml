name: 001-webapp-insights

variables:
  - name: installPath
    value: $(Agent.HomeDirectory)\tools\bicep
  - name: bicep
    value: $(installPath)\bicep.exe
  - name: filepathbase
    value: 001-webapp-insights/webapp-insights
  - name: filepath
    value: $(filepathbase).bicep
  - name: filepathArm
    value: $(filepathbase).json
  - name: templateSpecName
    value: az-tempspec-webappinsights
  - name: resourcegroupname
    value: sb-templatespecs
  - name: location
    value: westeurope
    
trigger:
  - main
  
pool:
  vmImage: windows-2019

steps:
- task: PowerShell@2
  displayName: "Install bicep"
  inputs:
    targetType: 'inline'
    script: |
      $installDir = New-Item -ItemType Directory -Path $(installPath) -Force
      $installDir.Attributes += 'Hidden'
      (New-Object Net.WebClient).DownloadFile("https://github.com/Azure/bicep/releases/latest/download/bicep-win-x64.exe", "$(installPath)\bicep.exe")
    pwsh: true
- task: PowerShell@2
  displayName: "Build bicep file"
  inputs:
    targetType: 'inline'
    script: |
      $(bicep) build $(System.DefaultWorkingDirectory)/$(filepath)
    pwsh: true
- task: AzurePowerShell@5
  displayName: "Check resource group"
  inputs:
    azureSubscription: 'Subscription MPN Sandbox(b27ac091-3de5-46d1-8f61-add3171f6e52)'
    ScriptType: 'InlineScript'
    Inline: |
      if (!(Get-AzResourceGroup "$(resourcegroupname)" -ErrorAction SilentlyContinue)){ 
          New-AzResourceGroup -Name "$(resourcegroupname)" -Location "$(location)"
      }else{
          Write-Output "The resource group already exists"
      }
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true
- task: AzurePowerShell@5
  displayName: "Dploy template spec"
  inputs:
    azureSubscription: 'Subscription MPN Sandbox(b27ac091-3de5-46d1-8f61-add3171f6e52)'
    ScriptType: 'InlineScript'
    Inline: |
      New-AzTemplateSpec -Name "$(templateSpecName)" -Version 1.0 -ResourceGroupName "$(resourcegroupname)" -Location "$(location)" -TemplateFile "$(System.DefaultWorkingDirectory)/$(filepathArm)"
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true
- task: CopyFiles@2
  displayName: 'Copy files to ARM staging directory'
  inputs:
    SourceFolder: "$(System.DefaultWorkingDirectory)"
    Contents: "**/*.json"
    TargetFolder: "$(build.artifactstagingdirectory)/arm"
- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifacts'
  inputs:
    targetPath: "$(build.artifactstagingdirectory)/arm"
    artifact: "drop"
    publishLocation: "pipeline"
